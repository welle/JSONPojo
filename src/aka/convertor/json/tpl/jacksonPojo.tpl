package ${package};
<#assign myList = []>
<#assign compSize = comp.getNodes()?size - 1>

<#list comp.getNodes() as column>  
<#if (column.getJavaType() == "java.util.Date")>
<#if (!myList.contains(column.getDeserName()))>
#set($success = $myList.add(${column.getDeserName()}))
import ${package}.deserialisers.${column.getDeserName()}Deserializer;
</#if>
</#if>
</#list>

<#if comp.containList() == true>
import java.util.ArrayList;
import java.util.List;
</#if>
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
<#if comp.containJsonProperty()>
import com.fasterxml.jackson.annotation.JsonProperty;
</#if>
<#if (comp.containDeserialiser() == true)>
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
</#if>

/**
 * Simple pojo 
 *
 * Generated by JetTools, do not edit this file directly.
 * 
 * @author JetToolsFramework
 */ 
@JsonIgnoreProperties(ignoreUnknown = true) 
public final class ${comp.getName()?cap_first} {

<#list comp.getNodes() as column> 
<#if (column.getSerName() != column.getParamName())>
    @JsonProperty("${column.getSerName()}")
</#if>
<#if (column.getJavaType() == "List" )>
    private List<${column.getJavaSubType()}> ${column.getParamName()} = new ArrayList<>();
<#elseif (column.getJavaType() == "java.util.Date" )>
    @JsonDeserialize(using = ${column.getDeserName()}Deserializer.class)
<#else>
    private ${column.getJavaType()} ${column.getParamName()};
</#if>
</#list>

    /**
     * Filling Constructor
     *
<#list comp.getNodes() as column> 
     * @param ${column.getParamName()} <#if (column.getJavaType() == "List")>List<${column.getJavaSubType()}<#else>${column.getJavaType()}</#if>
</#list>
     */
    public ${comp.getName()?cap_first}(<#list comp.getNodes() as column>final <#if (column.getJavaType() == "List" )>List<${column.getJavaSubType()}> ${column.getParamName()}<#else>${column.getJavaType()} ${column.getParamName()}</#if><#if (column_index != compSize)>, </#if></#list>) {
<#list comp.getNodes() as column> 
        this.${column.getParamName()} = ${column.getParamName()};
</#list>
    }
<#list comp.getNodes() as column>
    
    /**
     * Get value of ${column.getParamName()}
     *
<#if (column.getJavaType() == "List")>     
     * @return List<${column.getJavaSubType()}> value of ${column.getParamName()}
     */
    public final List<${column.getJavaSubType()}> get${column.getParamName()?cap_first}() {
<#else> 
     * @return ${column.getJavaType()} value of ${column.getParamName()}
     */
    public final ${column.getJavaType()} get${column.getParamName()?cap_first}() {
</#if>
        return this.${column.getParamName()};
    }
</#list>

<#list comp.getNodes() as column>
    
    /**
     * Set value of ${column.getParamName()}
     *
     * @param ${column.getParamName()}
<#if (column.getJavaType() == "List")>     
     */
    public final void get${column.getParamName()?cap_first}(final List<${column.getJavaSubType()}> ${column.getParamName()}) {
<#else> 
     */
    public final void set${column.getParamName()?cap_first}(final ${column.getJavaType()} ${column.getParamName()}) {
</#if>
        this.${column.getParamName()} = ${column.getParamName()};
    }
</#list>
}