package ${package};

import java.io.IOException;

import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

/**
 * This is a generated file and should not be modified.
 *
 * Generated by JetTools, do not edit this file directly.
 * 
 * @author JetToolsFramework
 */
public final class ${comp.Root}JacksonMapper {

    /**
     * @param jsonString String to parse
     *
     * @return ${comp.Root}
     * @throws IOException
     * @throws JsonParseException
     */
    public static ${comp.Root} readValue(final String jsonString) throws JsonParseException, IOException {
        ${comp.Root} result = null;
        
        if (jsonString != null && jsonString.trim().length() > 0) {
            final ObjectMapper objectMapper = new ObjectMapper();
            final JsonFactory jsonFactory = new JsonFactory();
            
            final JsonParser jp = jsonFactory.createJsonParser(jsonString);
            result = objectMapper.readValue(jp, ${comp.Root}.class);
        }
        
        return result;
    }
    
    /**
     * @param object ${comp.Root} to transform in Json string
     *
     * @return json string
     * @throws JsonProcessingException
     */
    public static String writeValue(final ${comp.Root} object) throws JsonProcessingException {
        final ObjectMapper objectMapper = new ObjectMapper();

        return objectMapper.writeValueAsString(object);
    }    
    
}